// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ApplyAgree.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ApplyAgree_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ApplyAgree_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ApplyAgree_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ApplyAgree_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ApplyAgree_2eproto;
namespace IM {
class ApplyAgree;
class ApplyAgreeDefaultTypeInternal;
extern ApplyAgreeDefaultTypeInternal _ApplyAgree_default_instance_;
}  // namespace IM
PROTOBUF_NAMESPACE_OPEN
template<> ::IM::ApplyAgree* Arena::CreateMaybeMessage<::IM::ApplyAgree>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace IM {

// ===================================================================

class ApplyAgree PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IM.ApplyAgree) */ {
 public:
  inline ApplyAgree() : ApplyAgree(nullptr) {};
  virtual ~ApplyAgree();

  ApplyAgree(const ApplyAgree& from);
  ApplyAgree(ApplyAgree&& from) noexcept
    : ApplyAgree() {
    *this = ::std::move(from);
  }

  inline ApplyAgree& operator=(const ApplyAgree& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApplyAgree& operator=(ApplyAgree&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ApplyAgree& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyAgree* internal_default_instance() {
    return reinterpret_cast<const ApplyAgree*>(
               &_ApplyAgree_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ApplyAgree& a, ApplyAgree& b) {
    a.Swap(&b);
  }
  inline void Swap(ApplyAgree* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApplyAgree* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ApplyAgree* New() const final {
    return CreateMaybeMessage<ApplyAgree>(nullptr);
  }

  ApplyAgree* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ApplyAgree>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ApplyAgree& from);
  void MergeFrom(const ApplyAgree& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyAgree* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IM.ApplyAgree";
  }
  protected:
  explicit ApplyAgree(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ApplyAgree_2eproto);
    return ::descriptor_table_ApplyAgree_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNetworkTypeFieldNumber = 1,
    kMsgIDFieldNumber = 2,
    kRecvIDFieldNumber = 3,
    kSendIDFieldNumber = 4,
    kApplyerIDFieldNumber = 5,
    kPeerIDFieldNumber = 6,
    kStateFieldNumber = 7,
  };
  // int32 networkType = 1;
  void clear_networktype();
  ::PROTOBUF_NAMESPACE_ID::int32 networktype() const;
  void set_networktype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_networktype() const;
  void _internal_set_networktype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 msgID = 2;
  void clear_msgid();
  ::PROTOBUF_NAMESPACE_ID::int32 msgid() const;
  void set_msgid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_msgid() const;
  void _internal_set_msgid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 recvID = 3;
  void clear_recvid();
  ::PROTOBUF_NAMESPACE_ID::int32 recvid() const;
  void set_recvid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_recvid() const;
  void _internal_set_recvid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 sendID = 4;
  void clear_sendid();
  ::PROTOBUF_NAMESPACE_ID::int32 sendid() const;
  void set_sendid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sendid() const;
  void _internal_set_sendid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 applyerID = 5;
  void clear_applyerid();
  ::PROTOBUF_NAMESPACE_ID::int32 applyerid() const;
  void set_applyerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_applyerid() const;
  void _internal_set_applyerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 peerID = 6;
  void clear_peerid();
  ::PROTOBUF_NAMESPACE_ID::int32 peerid() const;
  void set_peerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_peerid() const;
  void _internal_set_peerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 state = 7;
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::int32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IM.ApplyAgree)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 networktype_;
  ::PROTOBUF_NAMESPACE_ID::int32 msgid_;
  ::PROTOBUF_NAMESPACE_ID::int32 recvid_;
  ::PROTOBUF_NAMESPACE_ID::int32 sendid_;
  ::PROTOBUF_NAMESPACE_ID::int32 applyerid_;
  ::PROTOBUF_NAMESPACE_ID::int32 peerid_;
  ::PROTOBUF_NAMESPACE_ID::int32 state_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ApplyAgree_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ApplyAgree

// int32 networkType = 1;
inline void ApplyAgree::clear_networktype() {
  networktype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplyAgree::_internal_networktype() const {
  return networktype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplyAgree::networktype() const {
  // @@protoc_insertion_point(field_get:IM.ApplyAgree.networkType)
  return _internal_networktype();
}
inline void ApplyAgree::_internal_set_networktype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  networktype_ = value;
}
inline void ApplyAgree::set_networktype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_networktype(value);
  // @@protoc_insertion_point(field_set:IM.ApplyAgree.networkType)
}

// int32 msgID = 2;
inline void ApplyAgree::clear_msgid() {
  msgid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplyAgree::_internal_msgid() const {
  return msgid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplyAgree::msgid() const {
  // @@protoc_insertion_point(field_get:IM.ApplyAgree.msgID)
  return _internal_msgid();
}
inline void ApplyAgree::_internal_set_msgid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  msgid_ = value;
}
inline void ApplyAgree::set_msgid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_msgid(value);
  // @@protoc_insertion_point(field_set:IM.ApplyAgree.msgID)
}

// int32 recvID = 3;
inline void ApplyAgree::clear_recvid() {
  recvid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplyAgree::_internal_recvid() const {
  return recvid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplyAgree::recvid() const {
  // @@protoc_insertion_point(field_get:IM.ApplyAgree.recvID)
  return _internal_recvid();
}
inline void ApplyAgree::_internal_set_recvid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  recvid_ = value;
}
inline void ApplyAgree::set_recvid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_recvid(value);
  // @@protoc_insertion_point(field_set:IM.ApplyAgree.recvID)
}

// int32 sendID = 4;
inline void ApplyAgree::clear_sendid() {
  sendid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplyAgree::_internal_sendid() const {
  return sendid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplyAgree::sendid() const {
  // @@protoc_insertion_point(field_get:IM.ApplyAgree.sendID)
  return _internal_sendid();
}
inline void ApplyAgree::_internal_set_sendid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sendid_ = value;
}
inline void ApplyAgree::set_sendid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sendid(value);
  // @@protoc_insertion_point(field_set:IM.ApplyAgree.sendID)
}

// int32 applyerID = 5;
inline void ApplyAgree::clear_applyerid() {
  applyerid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplyAgree::_internal_applyerid() const {
  return applyerid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplyAgree::applyerid() const {
  // @@protoc_insertion_point(field_get:IM.ApplyAgree.applyerID)
  return _internal_applyerid();
}
inline void ApplyAgree::_internal_set_applyerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  applyerid_ = value;
}
inline void ApplyAgree::set_applyerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_applyerid(value);
  // @@protoc_insertion_point(field_set:IM.ApplyAgree.applyerID)
}

// int32 peerID = 6;
inline void ApplyAgree::clear_peerid() {
  peerid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplyAgree::_internal_peerid() const {
  return peerid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplyAgree::peerid() const {
  // @@protoc_insertion_point(field_get:IM.ApplyAgree.peerID)
  return _internal_peerid();
}
inline void ApplyAgree::_internal_set_peerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  peerid_ = value;
}
inline void ApplyAgree::set_peerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_peerid(value);
  // @@protoc_insertion_point(field_set:IM.ApplyAgree.peerID)
}

// int32 state = 7;
inline void ApplyAgree::clear_state() {
  state_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplyAgree::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ApplyAgree::state() const {
  // @@protoc_insertion_point(field_get:IM.ApplyAgree.state)
  return _internal_state();
}
inline void ApplyAgree::_internal_set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  state_ = value;
}
inline void ApplyAgree::set_state(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:IM.ApplyAgree.state)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace IM

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ApplyAgree_2eproto
